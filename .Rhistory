library(ANTsR)
??applywarp
library(extrantsr)
?ants_compcorr
fnirt_img = readNIfTI(fnirt_ofile, reorient = FALSE)
fnirt_img = robust_window(fnirt_img, replace = "window")
png(file.path(resdir, "T1_MNI_Warp.png"))
orthographic(fnirt_img, text = "A\nT1\nWarped Image", text.cex = 3)
dev.off()
temp_img = cal_img(readNIfTI(template, reorient = FALSE))
# temp_img = robust_window(temp_img, replace = "window")
setwd("/Users/johnmuschelli/Dropbox/FSLR/")
knit("muschelli_FSLR.Rnw")
fnirt_img
islice
image(temp_img, z = islice, plot.type="single")
?image.nifti
?image
image(temp_img, z = islice, plot.type="single", main="hey")
?iamge
?image
image
graphics::image
showMethods("graphics::image")
showMethods("image")
getMethod("image", "matrix")
getMethod("image", "ANY")
findMethod("image", "ANY")
showMethods("image")
getMethod("image", "Matrix")
graphics:::image.default
image(temp_img, z = islice, plot.type="single", main="hey", col="white")
image(temp_img, z = islice, plot.type="single", main="hey", text.col="white")
?image.nifti
image(temp_img, z = islice, plot.type="single", main="hey", bg="white")
dim(temp_img)
dim(temp_img)[2]
dim(temp_img)[2]/2
ycoord = 20
xcoord = dim(temp_img)[1]/2
ycoord
xcoord
image(temp_img, z = islice, plot.type="single")
text("hey", x=xcoord, y=ycoord, col="white")
?text
image(temp_img, z = islice, plot.type="single")
text(labels="hey", x=xcoord, y=ycoord, col="white")
image(temp_img, z = islice, plot.type="single")
text(labels="hey", x=xcoord, y=5, col="white")
image(temp_img, z = islice, plot.type="single")
text(labels="hey", x=5, y=5, col="white")
?text
image.nifti
image(temp_img[,,islice], col = gray(0:64/64))
text(labels"hey", x=xcoord, y=ycoord, col="white")
text(labels="hey", x=xcoord, y=ycoord, col="white")
X = nrow(temp_img)
X
ycoord = 20
xcoord = dim(temp_img)[1]/2
X = nrow(temp_img)
Y = ncol(temp_img)
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels="hey", x=xcoord, y=ycoord, col="white")
ycoord = 20
xcoord = dim(temp_img)[1]/2
X = nrow(temp_img)
Y = ncol(temp_img)
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels="hey", x=xcoord, y=ycoord, col="white")
xcoord = X/2
X = nrow(temp_img)
Y = ncol(temp_img)
ycoord = Y - 20
X = nrow(temp_img)
xcoord = X/2
Y = ncol(temp_img)
ycoord = Y - 20
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels="hey", x=xcoord, y=ycoord, col="white")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image\nSlice:" islice),
x=xcoord, y=ycoord, col="white")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image\nSlice:", islice),
x=xcoord, y=ycoord, col="white")
image.nifti
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image\nSlice:", islice),
x=xcoord, y=ycoord, col="white")
X = nrow(temp_img)
xcoord = X/2 - 10
Y = ncol(temp_img)
ycoord = Y - 20
?text
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image Slice:", islice),
x=xcoord, y=ycoord, col="white", cex=2)
X = nrow(temp_img)
xcoord = X/2 - 10
Y = ncol(temp_img)
ycoord = Y - 20
for (islice in c(25, 45, 92, 137)){
pngname = file.path(resdir, paste0("MNI_Warp_Slice_", islice, ".png"))
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
dev.off()
pngname = file.path(resdir, paste0("T1_MNI_Ortho_Slice_", islice, ".png"))
#   png(pngname)
#   image(fnirt_img, z = islice, plot.type="single")
#   dev.off()
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, fnirt_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Registered Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
dev.off()
}
X = nrow(temp_img)
xcoord = X/2 - 5
Y = ncol(temp_img)
ycoord = Y - 10
for (islice in c(25, 45, 92, 137)){
pngname = file.path(resdir, paste0("MNI_Warp_Slice_", islice, ".png"))
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
dev.off()
pngname = file.path(resdir, paste0("T1_MNI_Ortho_Slice_", islice, ".png"))
#   png(pngname)
#   image(fnirt_img, z = islice, plot.type="single")
#   dev.off()
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, fnirt_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Registered Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
dev.off()
}
X = nrow(temp_img)
xcoord = X/2
Y = ncol(temp_img)
ycoord = Y - 10
for (islice in c(25, 45, 92, 137)){
pngname = file.path(resdir, paste0("MNI_Warp_Slice_", islice, ".png"))
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
dev.off()
pngname = file.path(resdir, paste0("T1_MNI_Ortho_Slice_", islice, ".png"))
#   png(pngname)
#   image(fnirt_img, z = islice, plot.type="single")
#   dev.off()
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, fnirt_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Registered Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
dev.off()
}
letters
X
Y
text(labels=paste0(LETTERS[i]),
x=X - 5, y=10, col="white", cex=2)
i = 1
text(labels=paste0(LETTERS[i]),
x=X - 5, y=10, col="white", cex=2)
text(labels=paste0(LETTERS[i]),
x=X - 10, y=20, col="white", cex=3)
text(labels=paste0(LETTERS[i]),
x=X - 10, y=20, col="white", cex=5)
text(labels=paste0(LETTERS[i]),
x=X - 10, y=30, col="white", cex=5)
X = nrow(temp_img)
xcoord = X/2
Y = ncol(temp_img)
ycoord = Y - 10
i  = 1
for (islice in c(25, 45, 92, 137)){
pngname = file.path(resdir, paste0("MNI_Warp_Slice_", islice, ".png"))
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
text(labels=paste0(LETTERS[i]),
x=X - 10, y=30, col="white", cex=5)
dev.off()
i = i + 1
pngname = file.path(resdir, paste0("T1_MNI_Ortho_Slice_", islice, ".png"))
#   png(pngname)
#   image(fnirt_img, z = islice, plot.type="single")
#   dev.off()
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, fnirt_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Registered Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
text(labels=paste0(LETTERS[i]),
x=X - 10, y=30, col="white", cex=5)
dev.off()
i = i + 1
}
X = nrow(temp_img)
xcoord = X/2
Y = ncol(temp_img)
ycoord = Y - 10
i  = 1
for (islice in c(25, 45, 92, 137)){
pngname = file.path(resdir, paste0("MNI_Warp_Slice_", islice, ".png"))
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
text(labels=paste0(LETTERS[i]),
x=X - 20, y=30, col="white", cex=5)
dev.off()
i = i + 1
pngname = file.path(resdir, paste0("T1_MNI_Ortho_Slice_", islice, ".png"))
#   png(pngname)
#   image(fnirt_img, z = islice, plot.type="single")
#   dev.off()
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, fnirt_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Registered Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
text(labels=paste0(LETTERS[i]),
x=X - 10, y=30, col="white", cex=5)
dev.off()
i = i + 1
}
X = nrow(temp_img)
xcoord = X/2
Y = ncol(temp_img)
ycoord = Y - 10
i  = 1
for (islice in c(25, 45, 92, 137)){
pngname = file.path(resdir, paste0("MNI_Warp_Slice_", islice, ".png"))
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, temp_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Template Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
text(labels=paste0(LETTERS[i]),
x=X - 20, y=30, col="white", cex=5)
dev.off()
i = i + 1
pngname = file.path(resdir, paste0("T1_MNI_Ortho_Slice_", islice, ".png"))
#   png(pngname)
#   image(fnirt_img, z = islice, plot.type="single")
#   dev.off()
png(pngname)
par(oma = rep(0, 4), mar = rep(0, 4), bg="black")
#   image(temp_img, z = islice, plot.type="single")
image(1:X, 1:Y, fnirt_img[,,islice],
col = gray(0:64/64))
text(labels=paste0("Registered Image: Slice ", islice),
x=xcoord, y=ycoord, col="white", cex=2)
text(labels=paste0(LETTERS[i]),
x=X - 20, y=30, col="white", cex=5)
dev.off()
i = i + 1
}
image.nifti
Sys.getenv("R_QPDF", "qpdf")
Sys.getenv("R_QPDF")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
ls()
rm(list=ls())
q('yes')
ls()
rm(list=ls())
q()
library(bibtex)
x = read.bib("FSLR.bib")
x$note = lapply(x$note, function(x) NULL)
nifty = citation("RNiftyReg")
which(x$key == 'modat_rniftyreg:_2013')
library(bibtex)
x = read.bib("FSLR.bib")
x$note = lapply(x$note, function(x) NULL)
nifty = citation("RNiftyReg")
ind = which(x$key == 'modat_rniftyreg:_2013')
x = x[-ind]
library(bibtex)
x = read.bib("FSLR.bib")
x$note = lapply(x$note, function(x) NULL)
nifty = citation("RNiftyReg")
ind = which(x$key == 'modat_rniftyreg:_2013')
x = x[-ind]
nifty$key = 'modat_rniftyreg:_2013'
x = c(x, nifty)
write.bib(entry=x, file= "FSLR.bib")
library(bibtex)
x = read.bib("FSLR.bib")
x$note = lapply(x$note, function(x) NULL)
nifty = citation("RNiftyReg")
ind = which(x$key == 'modat_rniftyreg:_2013')
x = x[-ind]
nifty$key = 'modat_rniftyreg:_2013'
nifty$author
x[1]
names(x[1])
names(x$title)
x$title)
x$title
nifty$title
library(bibtex)
x = read.bib("FSLR.bib")
x$note = lapply(x$note, function(x) NULL)
nifty = citation("RNiftyReg")
ind = which(x$key == 'modat_rniftyreg:_2013')
x = x[-ind]
nifty$key = 'modat_rniftyreg:_2013'
auths = nifty$author
auths
library(bibtex)
x = read.bib("FSLR.bib")
x$note = lapply(x$note, function(x) NULL)
nifty = citation("RNiftyReg")
ind = which(x$key == 'modat_rniftyreg:_2013')
x = x[-ind]
nifty$key = 'modat_rniftyreg:_2013'
auths = nifty$author
nifty$author = nifty$author[1]
nifty$author = gsub(";.*", "", nifty$author )
nifty$author
library(bibtex)
x = read.bib("FSLR.bib")
x$note = lapply(x$note, function(x) NULL)
nifty = citation("RNiftyReg")
ind = which(x$key == 'modat_rniftyreg:_2013')
x = x[-ind]
nifty$key = 'modat_rniftyreg:_2013'
auths = nifty$author
nifty$author = nifty$author[1]
nifty$author = gsub(";.*", "", nifty$author )
auths = gsub(".*;", "", auths)
auths = paste(auths, collapse = " and ")
nifty$title = paste(nifty$title, auths)
nifty
library(bibtex)
x = read.bib("FSLR.bib")
x$note = lapply(x$note, function(x) NULL)
nifty = citation("RNiftyReg")
ind = which(x$key == 'modat_rniftyreg:_2013')
x = x[-ind]
nifty$key = 'modat_rniftyreg:_2013'
auths = nifty$author
nifty$author = nifty$author[1]
nifty$author = gsub(";.*", "", nifty$author )
auths = gsub(".*;", "", auths)
auths = paste(auths, collapse = " and ")
nifty$title = paste0(nifty$title, ", ", auths)
x = c(x, nifty)
write.bib(entry=x, file= "FSLR.bib")
library(fslr)
?rescale_img
library(bibtex)
x = read.bib("FSLR.bib")
x
x$note = lapply(x$note, function(x) NULL)
nifty = citation("RNiftyReg")
ind = which(x$key == 'modat_rniftyreg:_2013')
ind
if (length(ind) > 0) x = x[-ind]
nifty$key = 'modat_rniftyreg:_2013'
auths = nifty$author
nifty$author = nifty$author[1]
nifty$author = gsub(";.*", "", nifty$author )
auths = gsub(".*;", "", auths)
auths = paste(auths, collapse = " and ")
nifty$title = paste0(nifty$title, ", ", auths)
x = c(x, nifty)
write.bib(entry=x, file= "FSLR.bib")
